#!/bin/bash -ex

# This script is intended to be used from Bamboo plan.
# The script builds all the MPP examples from the SDK generated by the Bamboo plan.
# This is performed for a specific board configured with the environment variable BOARD
# (default is the default BOARD value set in Bamboo plan).

TOPDIR=$(pwd)

# set environment
echo "Set environment"
if [[ "${BOARD}" == "" ]]; then
    BOARD=${bamboo_BOARD_DEFAULT}
fi
if [[ "${DISPLAY}" == "" ]]; then
    DISPLAY=${bamboo_DISPLAY}
fi
if [[ "${EXAMPLES}" == "" ]]; then
    EXAMPLES=${bamboo_EXAMPLE}
fi
echo "board= ${BOARD}"
echo "display= ${DISPLAY}"
echo "examples= ${EXAMPLES}"

SDK_DIR=${TOPDIR}/SDK_${BOARD}

# extract SDK
cd "$TOPDIR"
unzip ${bamboo_ARTIFACTS_DIR}/*.zip -d ${SDK_DIR}

# Build MPP examples
MPP_DIR=${SDK_DIR}/middleware/eiq/mpp
MPP_EXAMPLES_DIR=${SDK_DIR}/boards/${BOARD}/eiq_examples

# MPP armgcc build output directory
ARMGCC_BUILD_NAME=build_${bamboo_buildNumber}_mpp_examples_armgcc_${BOARD}_${DISPLAY}
ARMGCC_BUILD_DIR=${TOPDIR}/${ARMGCC_BUILD_NAME}

# MPP mcux build output directory
MCUX_BUILD_NAME=build_${bamboo_buildNumber}_mpp_examples_mcux_${BOARD}_${DISPLAY}
MCUX_BUILD_DIR=${TOPDIR}/${MCUX_BUILD_NAME}

# MPP build log directory
BUILD_LOG_NAME=build_logs_${BOARD}_${DISPLAY}
BUILD_LOG_DIR=${TOPDIR}/${BUILD_LOG_NAME}

# Update DEMO_PANEL from display support.h
DEFINE_DISPLAY="#define DEMO_PANEL ${DISPLAY}"

# List of configs
#CONFIGS="default source_image"
CONFIGS="default"

archive_armgcc () {
    # Build type "release" or "debug"
    local build_type=$1
    if [[ "${build_type}" != "release" ]] && [[ "${build_type}" != "debug" ]]; then
        echo "Build type ${build_type} is not valid."
        exit 1
    fi

    # build folder name
    case "${BOARD}" in
        evkmimxrt1170 | evkbimxrt1050 | evkbmimxrt1170)
            BUILD_PREFIX="flexspi_nor_sdram_"
            ;;
        mcxn9xxevk)
            BUILD_PREFIX=""
            ;;
        mcxn9xxbrk)
            BUILD_PREFIX=""
            ;;
        frdmmcxn947)
            BUILD_PREFIX=""
            ;;
        mimxrt700evk)
            BUILD_PREFIX="flash_"
            ;;
        *)
            echo "Fail sdk board name"
            exit 1
    esac

    out_dir=${ARMGCC_BUILD_DIR}/${BUILD_PREFIX}${build_type}${config_name}
    mkdir ${out_dir} -p
    for build in `find . -name ${BUILD_PREFIX}${build_type}`; do
        echo ${build}
        # store binary
        cp ${build}/*.bin ${out_dir} 2>/dev/null || :
    done
}

archive_mcux () {
    # Build type "Release" or "Debug"
    local build_type=$1
    if [[ "${build_type}" != "Release" ]] && [[ "${build_type}" != "Debug" ]]; then
        echo "Build type ${build_type} is not valid."
        exit 1
    fi

    out_dir=${MCUX_BUILD_DIR}/${build_type}${config_name}
    mkdir ${out_dir} -p
    for build in `find ~/mcutk_workspace/ -name ${build_type}`; do
        echo ${build}
        # store binary
        cp ${build}/*.bin ${out_dir} 2>/dev/null || :
    done
}

collect_build_log () {
    # Build type "Release" or "Debug"
    local build_type=$1
    if [[ "${build_type}" != "Release" ]] && [[ "${build_type}" != "Debug" ]]; then
        echo "Build type ${build_type} is not valid."
        exit 1
    fi

    out_dir=${BUILD_LOG_DIR}${config_name}
    # Copy build logs
    find . -name "build_${build_type}.log" | xargs tar zcf ${out_dir}/build_log_${build_type}.tar.gz
    find ~/mcutk_workspace/ -name "build_${build_type}.log" | xargs tar zcf ${out_dir}/build_log_${build_type}.tar.gz
}

configure_example () {
    local configuration="$1"
    if [[ "${configuration}" == "source_image" ]];then
        for src_example in `ls ${MPP_DIR}/examples/*.c | xargs -n 1 basename`; do
            sed "s/define SOURCE_STATIC_IMAGE 0/define SOURCE_STATIC_IMAGE 1/g" ${MPP_DIR}/examples/${src_example} > ${MPP_DIR}/examples/${src_example}_${configuration}
            cp ${MPP_DIR}/examples/${src_example} ${MPP_DIR}/examples/${src_example}.save
            ln -sf ${src_example}_${configuration} ${MPP_DIR}/examples/${src_example}
        done
        config_name="_${configuration}"
    else
        config_name=""
    fi
}

cd ${MPP_EXAMPLES_DIR}
find . -name *.xml

# display configuration
if [ "${BOARD}" != "frdmmcxn947" ]  ; then
    for mpp_example in `ls * -d`; do
        echo ${mpp_example}
        # set display
        sed -i '/DEMO_PANEL DEMO_PANEL_/c \'"${DEFINE_DISPLAY}"\\'' ${mpp_example}/display_support.h
        grep "DEMO_PANEL DEMO_PANEL_" ${mpp_example}/display_support.h
    done
fi

# Build for each configuration
config_name=""
for config in ${CONFIGS}; do
    echo "build config: ${config}"
        
    configure_example ${config}
    mkdir ${BUILD_LOG_DIR}${config_name} -p

    # Debug build
    rm -rf ~/mcutk_workspace/
    mtk build -r -f bin -t Debug -O armgcc=/opt/toolchains/${bamboo_ARMGCC_DIR}
    archive_armgcc "debug"    
    archive_mcux "Debug"
    collect_build_log "Debug"

    # Release build
    rm -rf ~/mcutk_workspace/
    mtk build -r -f bin -t Release -O armgcc=/opt/toolchains/${bamboo_ARMGCC_DIR}
    archive_armgcc "release"
    archive_mcux "Release"
    collect_build_log "Release"

    # restore source file from before configuration
    for file in `ls ${MPP_DIR}/examples/*.save 2>/dev/null || true`; do
        file=$(basename ${file} .save)
        echo "restore ${file}"
        rm ${MPP_DIR}/examples/${file}
        mv ${MPP_DIR}/examples/${file}.save ${MPP_DIR}/examples/${file}
    done

done

# Create build archive
cd ${TOPDIR}
tar zcf ${bamboo_ARTIFACTS_DIR}/MPP_BUILD_${BOARD}.tar.gz ${ARMGCC_BUILD_NAME} ${MCUX_BUILD_NAME} ${BUILD_LOG_NAME}

